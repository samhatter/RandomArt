{"ast":null,"code":"var _jsxFileName = \"/app/src/utils/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 41\n  }, this);\n};\n_s(ProtectedRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","Outlet","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/app/src/utils/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\n\nconst ProtectedRoute = () => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAgB,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EAEnD,OAAOK,eAAe,gBAAGH,OAAA,CAACJ,MAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGP,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACL,EAAA,CAJID,cAAc;AAAAQ,EAAA,GAAdR,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}